name: Staging Server Deployment Workflow

on:
  push:
    branches:
      - master

jobs:
  deploy_staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Verify Node.js Installation
        run: node --version

      - name: Install Dependencies
        run: |
          cd react_repo
          npm install

      - name: Build Project
        run: |
          cd react_repo
          npm run build

      - name: Test Project
        run: |
          cd react_repo
          npm run test-react

      - name: Lint Codebase
        run: |
          cd react_repo
          npx eslint src/sum.js src/cartview.js src/shippingOptions.js

      - name: Deploy and Copy to Staging Server
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: ~/
          remote_host: ${{ secrets.IP }}
          remote_user: ubuntu
          remote_key: ${{ secrets.SSH_PEM }}

      - name: Install Node Modules on Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PEM }}
          port: 22
          script: |
            cd react_repo
            npm install

      - name: Deploy and Install Dependencies for Docker
        if: always()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PEM }}
          port: 22
          script: |
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl gnupg 
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            sudo docker run hello-world

      - name: Install Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PEM }}
          port: 22
          script: |
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version
      
      - name: Create Docker Network
        run: |
          ssh ubuntu@${{ secrets.IP }} -i ${{ secrets.SSH_PEM }} -p 22 \
          "docker network create my-network"

      - name: Run Docker Compose with Network
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PEM }}
          port: 22
          script: |
            sudo docker-compose up -d --network my-network

      - name: Run Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PEM }}
          port: 22
          script: |
            sudo docker-compose up -d
